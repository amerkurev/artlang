# don't send the nginx version number in error pages and Server header
server_tokens off;

add_header X-Frame-Options SAMEORIGIN;

# Redirect: http -> https
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://$host$request_uri;
}


# Redirect: www.* -> *
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /etc/letsencrypt/live/www.artlang.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.artlang.net/privkey.pem;

    server_name www.artlang.net;    
    return 301 https://artlang.net$request_uri;
}


server {
    listen 443 default_server ssl;
    listen [::]:443 default_server ssl;
    # listen 80 default_server;
    # listen [::]:80 default_server;

    server_name artlang.net;
    charset     utf-8;

    # max upload size
    client_max_body_size 10M;

    gzip on;
    gzip_comp_level 5;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;

    # Redirect 301:
    rewrite /article/view/2/ /post/vzyatiye-adresa-v-c++/ permanent;
    rewrite /article/view/10/ /post/vozmozhnosti-algoritmov-c++-zadachi-sortirovki/ permanent;
    rewrite /article/view/4/ /post/vector-c++-effektivno/ permanent;
    rewrite /article/view/14/ /post/unit-testirovaniye-c++-mock-obyekty-google-c++-mocking-framework/ permanent;
    rewrite /article/view/27/ /post/razrabotka-veb-prilozheniy-veb-servisov-na-c++/ permanent;
    rewrite /article/view/8/ /post/problemy-std-map-C++17/ permanent;
    rewrite /article/view/5/ /post/pro-size-std-list/ permanent;
    rewrite /article/view/18/ /post/o-refleksii-yazykakh-programmirovaniya-c++-java-python/ permanent;
    rewrite /article/view/7/ /post/konteyner-ssylok-c++-std-reference_wrapper/ permanent;
    rewrite /article/view/6/ /post/interesnaya-zadacha-na-sobesedovanii/ permanent;
    rewrite /article/view/22/ /post/docopt-podkhod-k-razboru-argumentov-komandnoy-stroki-—Å++-python-java/ permanent;
    rewrite /article/view/23/ /post/cheerp-kompilyator-c++-dlya-veb-razrabotki/ permanent;
    rewrite /article/view/11/ /post/c++17-global-funktsii-std-size-data-empty/ permanent;
    rewrite /article/view/12/ /post/c++17-gerb-satter-uncaught_exception/ permanent;
    rewrite /article/view/13/ /post/c++11-obkhod-elementov-kortezhe-std-tuple/ permanent;
    rewrite /article/view/25/ /post/c++-otlichiye-reinterpret_cast-ot-privedeniya-tipov-v-stile-c/ permanent;

    # Hugo public static
    root  {{ /home/username/public_html }};
    location / {
        index index.html;
        # try_files $uri $uri.html =404;
    }
    error_page 404 /404.html;

    # Google Verify
    location = /google7b7dab041efcc6fd.html {
        rewrite ^/(.*)  $1;
        return 200 "google-site-verification: $uri";
    }

    # SSL config generator
    # https://mozilla.github.io/server-side-tls/ssl-config-generator/
    # https://www.digitalocean.com/community/tutorials/how-to-create-an-ssl-certificate-on-nginx-for-ubuntu-14-04
    ssl_certificate /etc/letsencrypt/live/artlang.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/artlang.net/privkey.pem;

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # ssl_dhparam {{ dhparam }};

    # intermediate configuration. tweak to your needs.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    # ssl_stapling on;
    # ssl_stapling_verify on;
}
